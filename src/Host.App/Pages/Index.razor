@page "/"
@inject IMicroFrontendHost Host
@inject ISharedUserContext UserContext

<PageTitle>Blazor Micro Frontends Dashboard</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1>üöÄ Blazor Micro Frontends Dashboard</h1>
            <p class="lead">Welcome to the demonstration of Blazor WebAssembly micro frontends architecture.</p>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-8">
            <div class="module-container">
                <div class="module-header">
                    <h3 class="module-title">üìä System Overview</h3>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">üîê User Context</h5>
                                <p><strong>User:</strong> @UserContext.User.DisplayName</p>
                                <p><strong>Roles:</strong> @string.Join(", ", UserContext.User.Roles)</p>
                                <p><strong>Permissions:</strong> @UserContext.User.Permissions.Count</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">üì¶ Loaded Modules</h5>
                                @if (loadedModules.Any())
                                {
                                    <ul class="list-unstyled">
                                        @foreach (var module in loadedModules)
                                        {
                                            <li>‚úÖ @module.DisplayName (v@module.Version)</li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p class="text-muted">No modules loaded yet.</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="mt-4">
                    <h4>üéØ Available Modules</h4>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="card border-primary">
                                <div class="card-body">
                                    <h5 class="card-title">üì¶ Order Management</h5>
                                    <p class="card-text">Manage customer orders, view order history, and process order updates.</p>
                                    <a href="/orders" class="btn btn-primary">Open Module</a>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card border-success">
                                <div class="card-body">
                                    <h5 class="card-title">üõçÔ∏è Product Catalog</h5>
                                    <p class="card-text">Browse products, manage inventory, and update product information.</p>
                                    <a href="/products" class="btn btn-success">Open Module</a>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card border-info">
                                <div class="card-body">
                                    <h5 class="card-title">üìä Event Log</h5>
                                    <p class="card-text">Monitor real-time events and module communications.</p>
                                    <a href="/events" class="btn btn-info">View Events</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="module-container">
                <div class="module-header">
                    <h3 class="module-title">üìà Quick Stats</h3>
                </div>
                
                <div class="list-group list-group-flush">
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        Active Modules
                        <span class="badge badge-primary badge-pill">@loadedModules.Count()</span>
                    </div>
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        User Permissions
                        <span class="badge badge-success badge-pill">@UserContext.User.Permissions.Count</span>
                    </div>
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        Session Time
                        <span class="badge badge-info badge-pill">@GetSessionTime()</span>
                    </div>
                </div>

                <div class="mt-3">
                    <button class="btn btn-outline-primary btn-sm" @onclick="RefreshModules">
                        üîÑ Refresh Modules
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<IMicroFrontend> loadedModules = new();    protected override void OnInitialized()
    {
        RefreshModules();
    }

    private void RefreshModules()
    {
        if (Host is MicroFrontendHost hostImpl)
        {
            loadedModules = hostImpl.GetRegisteredModules().ToList();
            StateHasChanged();
        }
    }

    private string GetSessionTime()
    {
        var sessionTime = DateTime.UtcNow - UserContext.User.LastLoginDate;
        if (sessionTime.TotalHours >= 1)
            return $"{sessionTime.Hours}h {sessionTime.Minutes}m";
        else
            return $"{sessionTime.Minutes}m";
    }
}
